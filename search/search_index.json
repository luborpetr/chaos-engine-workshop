{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"In this workshop you will learn how to deploy Chaos Engine framework and how to execute and analyse experiments targeting Kubernetes PODs. The Chaos Engine and our test targets will be provisioned in Google Cloud Platform. Workshop Prerequisites Sign up for free GCP subscription Make sure you have Chrome web browser installed","title":"Home"},{"location":"#workshop-prerequisites","text":"Sign up for free GCP subscription Make sure you have Chrome web browser installed","title":"Workshop Prerequisites"},{"location":"Labs/Lab 1/","text":"Lab 1: Activate your GCP console Open Chrome web browser and go to GCP console Activate Cloud Shell by clinking on the shell icon in the upper right corner of the Console I will take a while until your Cloud Shell instance gets provisioned","title":"Lab 1: Activate your GCP console"},{"location":"Labs/Lab 1/#lab-1-activate-your-gcp-console","text":"Open Chrome web browser and go to GCP console Activate Cloud Shell by clinking on the shell icon in the upper right corner of the Console I will take a while until your Cloud Shell instance gets provisioned","title":"Lab 1: Activate your GCP console"},{"location":"Labs/Lab 2/","text":"Lab 2: Install Chaos Engine In this lab we will setup our demo environment and we will learn how to deploy and run Chaos Engine tool. Clone workshop GitHub repo In Cloud Shell clone the workshop repo. We are going to use scripts located in scripts directory. shell command git clone https://github.com/luborpetr/chaos-engine-workshop.git expected output Cloning into chaos-engine-workshop ... remote: Enumerating objects: 4, done. remote: Counting objects: 100% (4/4), done. remote: Compressing objects: 100% (3/3), done. remote: Total 4 (delta 0), reused 0 (delta 0), pack-reused 0 Unpacking objects: 100% (4/4), done. Create new compute instance We start with creation of a compute node that will be hosting our Chaos Engine instance. Run following gcloud command in your Cloud Shell . The script will provision new compute instance with docker and docker-compose installed. Note The script referenced by startup-script=scripts/provision-vm.sh option is located in the repo we've downloaded in previous step. Make sure you are in the repo root directory before you run the gcloud command. gcloud command gcloud compute \\ instances create chaos-engine \\ --zone = europe-west2-c \\ --machine-type = n1-standard-1 \\ --no-service-account \\ --no-scopes \\ --tags = chaos-engine \\ --image = ubuntu-1604-xenial-v20200129 \\ --image-project = ubuntu-os-cloud \\ --boot-disk-size = 20GB \\ --boot-disk-type = pd-standard \\ --boot-disk-device-name = chaos-engine \\ --metadata-from-file startup-script = scripts/provision-vm.sh expected output WARNING : You have selected a disk size of under [ 200 GB ]. This may result in poor I /O performance. For more information, see: https://developers.google.com/compute/docs/ disks # performance . Created [ https :// www . googleapis . com /compute/v1/projects/gemalto-cspeng/zones/europe-west2-c/instances/ chaos - engine ]. WARNING : Some requests generated warnings : - Disk size : 20 GB is larger than image size : 10 GB . You might need to resize the root repartition manually if the operating system does not support automatic resizing . See https :// cloud . google . com /compute/docs/disks/ add - persistent - disk # resize_pd for details . NAME ZONE MACHINE_TYPE PREEMPTIBLE INTERNAL_IP EXTERNAL_IP STATUS chaos - engine europe - west2 - c n1 - standard - 1 10 . xxx . xxx . xxx xxx . xxx . xxx . xxx RUNNING Configure firewall By default all ingress traffic is dropped by the firewall. We need couple of ports opened to the internet. That could be done by following command: gcloud command gcloud compute firewall-rules create chaos-engine-inbound \\ --direction = INGRESS \\ --priority = 1000 \\ --network = default \\ --action = ALLOW \\ --rules = tcp:8080,tcp:8200,tcp:9000 \\ --source-ranges = 0 .0.0.0/0 \\ --target-tags = chaos-engine expected command Creating firewall...\u2827Created [https://www.googleapis.com/compute/v1/projects/gemalto-cspeng/global/firewalls/chaos-engine-inbound]. Creating firewall...done. NAME NETWORK DIRECTION PRIORITY ALLOW DENY DISABLED chaos-engine-inbound default INGRESS 1000 tcp:8080,tcp:8200,tcp:9000 False Connect to the Chaos Engine instance In order to SSH to the machine run following command gcloud command gcloud compute ssh --zone europe-west2-c chaos-engine expected output Welcome to Ubuntu 16.04.6 LTS ( GNU / Linux 4.15.0 - 1052 - gcp x86_64 ) * Documentation : https : // help . ubuntu . com * Management : https : // landscape . canonical . com * Support : https : // ubuntu . com / advantage 25 packages can be updated . 15 updates are security updates . New release 18.04.4 LTS available . Run do-release-upgrade to upgrade to it . Last login : Fri Feb 21 14 : 21 : 29 2020 from xxx . xxx . xxx . xx user @chaos - engine : ~ $ Verify all prerequisites are installed properly On the chaos-engine machine run following list of post install checks Check docker Check you have docker configured properly. shell command docker ps expected output user@chaos-engine:~$ docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES If the output looks like below, you need to adjust your groups by running usermod -a -G docker $USER and relogin. Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get http://%2Fvar%2Frun%2Fdocker.sock/v1.40/containers/json: dial unix /var/run/docker.sock: connect: permission denied Check docker-compose Verify docker-compose in your path. shell command docker-compose expected output user@chaos-engine:~$ docker-compose -v docker-compose version 1.25.4, build 8d51620a Deploy Chaos Engine Chaos Engine deployment is very easy, we just need to do few configuration steps. Clone Chaos Engine GitHub repo Clone official Chaos Engine GitHub repo in order to get latest version of the configuration scripts. From your Chaos Engine VM run: shell command git clone https://github.com/gemalto/chaos-engine.git expected output user@chaos-engine:~$ git clone https://github.com/gemalto/chaos-engine.git Cloning into chaos-engine ... remote: Enumerating objects: 691, done. remote: Counting objects: 100% (691/691), done. remote: Compressing objects: 100% (315/315), done. remote: Total 26251 (delta 275), reused 609 (delta 228), pack-reused 25560 Receiving objects: 100% (26251/26251), 3.53 MiB | 3.98 MiB/s, done. Resolving deltas: 100% (10854/10854), done. Checking connectivity... done. Adjust configuration On the Chaos Engine machine go to chaos-engine directory and replace docker-compose.yml with a file from the workshop repo: wget https://raw.githubusercontent.com/luborpetr/chaos-engine-workshop/master/docker/docker-compose.yml . Pull Docker Images lubor@chaos-engine:~/chaos-engine$ docker-compose pull Pulling vault ... done Pulling vault-loader ... done Pulling chaosengine ... done lubor@chaos-engine:~/chaos-engine$ docker images REPOSITORY TAG IMAGE ID CREATED SIZE thalesgroup/chaos-engine stable 46c560a17d9a 2 days ago 304MB vault latest 0542f65ae3d0 4 weeks ago 140MB","title":"Lab 2: Install Chaos Engine"},{"location":"Labs/Lab 2/#lab-2-install-chaos-engine","text":"In this lab we will setup our demo environment and we will learn how to deploy and run Chaos Engine tool.","title":"Lab 2: Install Chaos Engine"},{"location":"Labs/Lab 2/#clone-workshop-github-repo","text":"In Cloud Shell clone the workshop repo. We are going to use scripts located in scripts directory. shell command git clone https://github.com/luborpetr/chaos-engine-workshop.git expected output Cloning into chaos-engine-workshop ... remote: Enumerating objects: 4, done. remote: Counting objects: 100% (4/4), done. remote: Compressing objects: 100% (3/3), done. remote: Total 4 (delta 0), reused 0 (delta 0), pack-reused 0 Unpacking objects: 100% (4/4), done.","title":"Clone workshop GitHub repo"},{"location":"Labs/Lab 2/#create-new-compute-instance","text":"We start with creation of a compute node that will be hosting our Chaos Engine instance. Run following gcloud command in your Cloud Shell . The script will provision new compute instance with docker and docker-compose installed. Note The script referenced by startup-script=scripts/provision-vm.sh option is located in the repo we've downloaded in previous step. Make sure you are in the repo root directory before you run the gcloud command. gcloud command gcloud compute \\ instances create chaos-engine \\ --zone = europe-west2-c \\ --machine-type = n1-standard-1 \\ --no-service-account \\ --no-scopes \\ --tags = chaos-engine \\ --image = ubuntu-1604-xenial-v20200129 \\ --image-project = ubuntu-os-cloud \\ --boot-disk-size = 20GB \\ --boot-disk-type = pd-standard \\ --boot-disk-device-name = chaos-engine \\ --metadata-from-file startup-script = scripts/provision-vm.sh expected output WARNING : You have selected a disk size of under [ 200 GB ]. This may result in poor I /O performance. For more information, see: https://developers.google.com/compute/docs/ disks # performance . Created [ https :// www . googleapis . com /compute/v1/projects/gemalto-cspeng/zones/europe-west2-c/instances/ chaos - engine ]. WARNING : Some requests generated warnings : - Disk size : 20 GB is larger than image size : 10 GB . You might need to resize the root repartition manually if the operating system does not support automatic resizing . See https :// cloud . google . com /compute/docs/disks/ add - persistent - disk # resize_pd for details . NAME ZONE MACHINE_TYPE PREEMPTIBLE INTERNAL_IP EXTERNAL_IP STATUS chaos - engine europe - west2 - c n1 - standard - 1 10 . xxx . xxx . xxx xxx . xxx . xxx . xxx RUNNING","title":"Create new compute instance"},{"location":"Labs/Lab 2/#configure-firewall","text":"By default all ingress traffic is dropped by the firewall. We need couple of ports opened to the internet. That could be done by following command: gcloud command gcloud compute firewall-rules create chaos-engine-inbound \\ --direction = INGRESS \\ --priority = 1000 \\ --network = default \\ --action = ALLOW \\ --rules = tcp:8080,tcp:8200,tcp:9000 \\ --source-ranges = 0 .0.0.0/0 \\ --target-tags = chaos-engine expected command Creating firewall...\u2827Created [https://www.googleapis.com/compute/v1/projects/gemalto-cspeng/global/firewalls/chaos-engine-inbound]. Creating firewall...done. NAME NETWORK DIRECTION PRIORITY ALLOW DENY DISABLED chaos-engine-inbound default INGRESS 1000 tcp:8080,tcp:8200,tcp:9000 False","title":"Configure firewall"},{"location":"Labs/Lab 2/#connect-to-the-chaos-engine-instance","text":"In order to SSH to the machine run following command gcloud command gcloud compute ssh --zone europe-west2-c chaos-engine expected output Welcome to Ubuntu 16.04.6 LTS ( GNU / Linux 4.15.0 - 1052 - gcp x86_64 ) * Documentation : https : // help . ubuntu . com * Management : https : // landscape . canonical . com * Support : https : // ubuntu . com / advantage 25 packages can be updated . 15 updates are security updates . New release 18.04.4 LTS available . Run do-release-upgrade to upgrade to it . Last login : Fri Feb 21 14 : 21 : 29 2020 from xxx . xxx . xxx . xx user @chaos - engine : ~ $","title":"Connect to the Chaos Engine instance"},{"location":"Labs/Lab 2/#verify-all-prerequisites-are-installed-properly","text":"On the chaos-engine machine run following list of post install checks","title":"Verify all prerequisites are installed properly"},{"location":"Labs/Lab 2/#check-docker","text":"Check you have docker configured properly. shell command docker ps expected output user@chaos-engine:~$ docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES If the output looks like below, you need to adjust your groups by running usermod -a -G docker $USER and relogin. Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get http://%2Fvar%2Frun%2Fdocker.sock/v1.40/containers/json: dial unix /var/run/docker.sock: connect: permission denied","title":"Check docker"},{"location":"Labs/Lab 2/#check-docker-compose","text":"Verify docker-compose in your path. shell command docker-compose expected output user@chaos-engine:~$ docker-compose -v docker-compose version 1.25.4, build 8d51620a","title":"Check docker-compose"},{"location":"Labs/Lab 2/#deploy-chaos-engine","text":"Chaos Engine deployment is very easy, we just need to do few configuration steps.","title":"Deploy Chaos Engine"},{"location":"Labs/Lab 2/#clone-chaos-engine-github-repo","text":"Clone official Chaos Engine GitHub repo in order to get latest version of the configuration scripts. From your Chaos Engine VM run: shell command git clone https://github.com/gemalto/chaos-engine.git expected output user@chaos-engine:~$ git clone https://github.com/gemalto/chaos-engine.git Cloning into chaos-engine ... remote: Enumerating objects: 691, done. remote: Counting objects: 100% (691/691), done. remote: Compressing objects: 100% (315/315), done. remote: Total 26251 (delta 275), reused 609 (delta 228), pack-reused 25560 Receiving objects: 100% (26251/26251), 3.53 MiB | 3.98 MiB/s, done. Resolving deltas: 100% (10854/10854), done. Checking connectivity... done.","title":"Clone Chaos Engine GitHub repo"},{"location":"Labs/Lab 2/#adjust-configuration","text":"On the Chaos Engine machine go to chaos-engine directory and replace docker-compose.yml with a file from the workshop repo: wget https://raw.githubusercontent.com/luborpetr/chaos-engine-workshop/master/docker/docker-compose.yml .","title":"Adjust configuration"},{"location":"Labs/Lab 2/#pull-docker-images","text":"lubor@chaos-engine:~/chaos-engine$ docker-compose pull Pulling vault ... done Pulling vault-loader ... done Pulling chaosengine ... done lubor@chaos-engine:~/chaos-engine$ docker images REPOSITORY TAG IMAGE ID CREATED SIZE thalesgroup/chaos-engine stable 46c560a17d9a 2 days ago 304MB vault latest 0542f65ae3d0 4 weeks ago 140MB","title":"Pull Docker Images"}]}